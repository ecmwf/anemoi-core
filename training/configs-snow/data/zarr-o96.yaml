format: zarr
resolution: o96  # n320
# Time frequency requested from dataset
frequency: 6h
# Time step of model (must be multiple of frequency)
timestep: 6h

# features that are not part of the forecast state
# but are used as forcing to generate the forecast state
forcing:
  - "cos_latitude"
  - "cos_longitude"
  - "sin_latitude"
  - "sin_longitude"
  - "cos_julian_day"
  - "cos_local_time"
  - "sin_julian_day"
  - "sin_local_time"
  - "insolation"
  - "lsm"
  - "sdor"
  - "slor"
  - "z"

# features that are only part of the forecast state
# but are not used as the input to the model
diagnostic:
  - tp
  - cp
  - sf
  # - tcc
  # - hcc
  # - lcc
  # - mcc
  # - ro
  # - ssrd
  # - strd
  # - 100u
  # - 100v
  - snowc

normalizer:
  default: "mean-std"
  remap:
    cp: tp
    sf: tp
  std:
    - "tp"
    - "cp"
    - "sf"
    # - "ro"
    - "tcw"
    # - "ssrd"
    - "q_50"
    - "q_100"
    - "q_150"
    - "q_200"
    - "q_250"
    - "q_300"
    - "q_400"
    - "q_500"
    - "q_600"
    - "q_700"
    - "q_850"
    - "q_925"
    - "q_1000"
    #- "sd_no_glacier"
    #- "sd_glacier_only"
    - "sd"
  min-max:


  max:
    - "sdor"
    - "slor"
    - "z"
    #- "sd_glacier_only"

  none:
    - "cos_latitude"
    - "cos_longitude"
    - "sin_latitude"
    - "sin_longitude"
    - "cos_julian_day"
    - "cos_local_time"
    - "sin_julian_day"
    - "sin_local_time"
    - "insolation"
    - "lsm"
    # - "tcc"
    # - "mcc"
    # - "hcc"
    # - "lcc"
    # - "swvl1"
    # - "swvl2"
    - "snowc"

imputer:
  default: "none"
  # 0:
  #   - sd
  #   - tsn
  #   - rsn
  #   #- sd_no_glacier
  #   #- sd_glacier_only
  #   - snowc
  minimum:
    - sd
    - tsn
    - rsn
    #- sd_no_glacier
    #- sd_glacier_only
    - snowc

# processors including imputers and normalizers are applied in order of definition
processors:
  imputer:
    _target_: anemoi.models.preprocessing.imputer.InputImputer
    _convert_: all
    config: ${data.imputer}
  normalizer:
    _target_: anemoi.models.preprocessing.normalizer.InputNormalizer
    _convert_: all
    config: ${data.normalizer}

# Values set in the code
num_features: null # number of features in the forecast state
