defaults:
- data: zarr-o96
- dataloader: native_grid
- diagnostics: evaluation
- hardware: atos  # leonardo
- graph: encoder_decoder_only
- model: transformer
- training: default_tendency
- _self_


### This file is for local experimentation.
##  When you commit your changes, assign the new features and keywords
##  to the correct defaults.
# For example to change from default GPU count:
# hardware:
#   num_gpus_per_node: 1

### This file is for local experimentation.
##  When you commit your changes, assign the new features and keywords
##  to the correct defaults.
# For example to change from default GPU count:
# hardware:
#   num_gpus_per_node: 1
diagnostics:
  log:
    mlflow:
      enabled: True
      offline: False
      run_name: 'o96-std-tendency-loss'
      terminal: True
      authentication: True
  plot:
    enabled: True
    scatter: False
    asynchronous: False
    mode: asyncio
model:
  num_channels: 1024
  trainable_parameters:
    data: 0
    hidden: 0
    data2hidden: 0
    hidden2data: 0
dataloader:
  batch_size:
    training: 1
    validation: 1
  limit_batches:
    training: null
    validation: null

# hardware:
#   num_gpus_per_node: 1

training:
  multistep_input: 1
  max_steps: 150000
lr:
  rate: 0.625e-4 #local_lr
  iterations: ${training.max_steps} # NOTE: When max_epochs < max_steps, scheduler will run for max_steps
  min: 3e-7 #Not scaled by #GPU
  # fork_run_id: 4fba9f2c35694dc9be9e72a3a5276d25
  # rollout:
  #   epoch_increment: 1
  #   max: 12
  #   start: 1
  variable_loss_scaling:
    variable_groups:
      default: sfc
      pl: [q, t, u, v, w, z]
    default: 1
    q: 1
    t: 1
    u: 1
    v: 1
    w: 0.1
    z: 1
    sp: 1
    10u: 1
    10v: 1
    2d: 1
    tp: 1
    cp: 1
    # swvl2: 0.2
    # swvl1: 0.05
  additional_scalars:
    # pressure level scalar
    - _target_: anemoi.training.train.scaling.ReluVariableLevelScaler
      group: pl
      y_intercept: 0.2
      slope: 0.001
      scale_dim: -1 # dimension on which scaling applied
      name: "variable_pressure_level"
    # tendency scalers
    # scale the prognostic losses by the stdev of the variable tendencies (e.g. the 6-hourly differences of the data)
    # useful if including slow vs fast evolving variables in the training (e.g. Land/Ocean vs Atmosphere)
    # if using this option 'variable_loss_scalings' should all be set close to 1.0 for prognostic variables
    # stdev tendency scaler
    # - _target_: anemoi.training.data.scaling.StdevTendencyScaler
    #   scale_dim: -1 # dimension on which scaling applied
    #   name: "tendency"
    # var tendency scaler (this should be default!?)
    - _target_: anemoi.training.train.scaling.StdevTendencyScaler
      scale_dim: -1 # dimension on which scaling applied
      name: "tendency"

# loss function for the model
training_loss:
  # loss class to initialise
  _target_: anemoi.training.losses.mse.WeightedMSELoss
  #Â Scalars to include in loss calculation
  # Available scalars include:
  # - 'variable': See `variable_loss_scaling` for more information
  # - 'loss_weights_mask': Giving imputed NaNs a zero weight in the loss function
  # - 'tendency': See `additional_scalars` for more information
  #scalars: ['tendency']
  scalars: ['variable', 'variable_pressure_level', 'loss_weights_mask', 'tendency']
  ignore_nans: True

# hardware:
#   files:
#     warm_start: aifs-by_time-epoch_086-step_290410.ckpt
