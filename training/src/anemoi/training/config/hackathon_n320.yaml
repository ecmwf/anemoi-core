defaults:
  - hardware: slurm
  - data: zarr
  - dataloader: native_grid
  - model: transformer
  - graph: encoder_decoder_only
  - training: default
  - diagnostics: evaluation
  - override hydra/job_logging: none
  - override hydra/hydra_logging: none
  - _self_
hydra:
  job:
    chdir: True
  output_subdir: null #disable outputs/date/date/.hydra from being made in cwd

no_validation: True

model: #transformer only
  num_channels: 1024 # full model: 1024
  processor:
    attention_implementation: 'flash_attention_v3'
    window_size: 1120
  encoder:
    shard_strategy: 'edges'
    num_chunks: 16
  decoder:
    shard_strategy: 'edges'
    num_chunks: 16
  layer_kernels:
    LayerNorm:
      _target_: "torch.nn.LayerNorm" #the default PyTorch implementation
            #_target_: "liger_kernel.transformers.LigerRMSNorm"
      _partial_: True
      #Any arguments to your chosen function go here e.g.
      #bias: False
    Linear:
      _target_: "torch.nn.Linear"
      _partial_: True

graph:
  nodes: #hidden res o96 for the transformer model
    hidden:
      node_builder:
        grid: o96

dataloader:
  num_workers:
    training: 4
    validation: 4
    test: 4
  batch_size:
    training: 1
    validation: 1
  training:
    end: 20200125
  validation:
    start: 20200126
    end: 20200131

hardware:
  files:
    dataset: aifs-ea-an-oper-0001-mars-n320-2020-2020-6h-v4.zarr
    graph: hackathon.graph
  paths:
    data: /p/scratch/jureap5/aifs/inputs/
    output: /p/scratch/jureap5/aifs/outputs/
  num_gpus_per_node: ${oc.decode:${oc.env:SLURM_NTASKS_PER_NODE}}
  num_nodes: ${oc.decode:${oc.env:SLURM_NNODES}}
  num_gpus_per_model: ${oc.decode:${oc.env:SLURM_NTASKS}}

diagnostics:
  enable_checkpointing: True
  benchmark_profiler:
    memory:
      enabled: false
      trace_rank0_only: true
    snapshot:
      enabled: true
    time:
      verbose: true
  log:
    wandb: #log offline every 50 steps
      enabled: False
      entity: ''
    mlflow: #log offline every 50 steps
      enabled: False
      offline: True
      tracking_uri: ''
    interval: 50
  plot: #disable plotting
    callbacks: []

training: #disable sanity checking at the start of training
  max_epochs: 1
  num_sanity_val_steps: 5
