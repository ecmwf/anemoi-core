variable_groups:
  default: sfc
  pl: [q, t, u, v, w, z]

# Several scalers can be added here. In order to be applied their names must be included in the loss.
# scaler name must be included in `scalers` in the losses for this to be applied.
builders:
  general_variable:
    #Â Variable groups definition for scaling by variable level.
    # The variable level scaling methods are defined under additional_scalers
    # A default group is required and is appended as prefix to the metric of all variables not assigned to a group.
    _target_: anemoi.training.scaling.variable.GeneralVariableLossScaler
    scale_dim: -1 # dimension on which scaling applied
    weights:
      default: 1
      q: 0.6 #1
      t: 6   #1
      u: 0.8 #0.5
      v: 0.5 #0.33
      w: 0.001
      z: 12  #1
      sp: 10
      10u: 0.1
      10v: 0.1
      2d: 0.5
      tp: 0.025
      cp: 0.0025

  pressure_level:
    _target_: anemoi.training.scaling.variable_level.ReluVariableLevelScaler
    group: pl
    y_intercept: 0.2
    slope: 0.001
    scale_dim: -1 # dimension on which scaling applied

  # mask NaNs with zeros in the loss function
  nan_mask_weights:
    _target_: anemoi.training.scaling.loss_weights_mask.NaNMaskScaler
    scale_dim: (-2, -1) # dimension on which scaling applied

  # tendency scalers
  # scale the prognostic losses by the stdev of the variable tendencies (e.g. the 6-hourly differences of the data)
  # useful if including slow vs fast evolving variables in the training (e.g. Land/Ocean vs Atmosphere)
  # if using this option 'variable_loss_scalings' should all be set close to 1.0 for prognostic variables
  stdev_tendency:
    _target_: anemoi.training.scaling.variable_tendency.StdevTendencyScaler
    scale_dim: -1 # dimension on which scaling applied
  var_tendency:
    _target_: anemoi.training.scaling.variable_tendency.VarTendencyScaler
    scale_dim: -1 # dimension on which scaling applied

  node_weights:
    _target_: anemoi.training.losses.nodeweights.GraphNodeAttribute
    target_nodes: ${graph.data}
    node_attribute: area_weight
    scale_dim: 2 # dimension on which scaling applied

  # limited_area_mask
